***************************************************************************
******* Node Affinity ********************************************
***************************************************************************

1. How many Labels exist on node node01?
   kubectl describe nodes node01 --> 3

2. What is the value set to the label beta.kubernetes.io/arch on node01?
   kubectl describe nodes node01 --> amd64

3. Apply a label color=blue to node node01
   kubectl label nodes node01 color=blue
4. Create a new deployment named blue with the nginx image and 3 replicas.
vi depl_blue.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: blue
  name: blue
spec:
  replicas: 3
  selector:
    matchLabels:
      run: blue
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: blue
    spec:
      containers:
      - image: nginx
        name: blue
        resources: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: color
                  operator: In
                  values:
                    - blue
status: {}
--------------------------------------------------------------------------------------------

5. Which nodes can the pods for the blue deployment be placed on?
Make sure to check taints on both nodes!
node01 и CP
--------------------------------------------------------------------------------------------
6. Set Node Affinity to the deployment to place the pods on node01 only.
Сделано выше
--------------------------------------------------------------------------------------------
7. Which nodes are the pods placed on now?
Node01
--------------------------------------------------------------------------------------------
8. Create a new deployment named red with the nginx image and 2 replicas, and ensure it gets placed on the controlplane node only.
Use the label key - node-role.kubernetes.io/control-plane - which is already set on the controlplane node.
vi depl_red.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: red
  name: red
spec:
  replicas: 2
  selector:
    matchLabels:
      run: red
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: red
    spec:
      containers:
      - image: nginx
        name: red
        resources: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists

kubectl apply -f dep_red.yml
--- or 
kubectl create -f dep_red.yml
