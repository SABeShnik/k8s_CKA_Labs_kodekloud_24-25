**************************************************************************
******* 9_Network_Policies ***********************************************
**************************************************************************
--------------------------------------------------------------------------


1. How many network policies do you see in the environment? ---> 1
We have deployed few web applications, services and network policies. Inspect the environment.

controlplane ~ ✖ kubectl get networkpolicies
NAME             POD-SELECTOR   AGE
payroll-policy   name=payroll   117s

controlplane ~ ➜  kubectl get deployments.apps 
No resources found in default namespace.

controlplane ~ ➜  kubectl get service
NAME               TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
db-service         ClusterIP   10.109.238.235   <none>        3306/TCP         4m55s
external-service   NodePort    10.108.215.211   <none>        8080:30080/TCP   4m55s
internal-service   NodePort    10.104.113.178   <none>        8080:30082/TCP   4m55s
kubernetes         ClusterIP   10.96.0.1        <none>        443/TCP          60m
payroll-service    NodePort    10.96.1.220      <none>        8080:30083/TCP   4m55s

controlplane ~ ➜  kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
external   1/1     Running   0          5m1s
internal   1/1     Running   0          5m
mysql      1/1     Running   0          5m1s
payroll    1/1     Running   0          5m

controlplane ~ ➜  kubectl get netpol
NAME             POD-SELECTOR   AGE
payroll-policy   name=payroll   13m
--------------------------------------------------------------------------
2. What is the name of the Network Policy? ---> payroll-policy
--------------------------------------------------------------------------
3. Which pod is the Network Policy applied on? ---> payrool
controlplane ~ ➜  kubectl get netpol
NAME             POD-SELECTOR   AGE
payroll-policy   name=payroll   13m 
controlplane ~ ➜  kubectl get po --show-labels | grep name=payroll
payroll    1/1     Running   0          17m   name=payroll
--------------------------------------------------------------------------

4. What type of traffic is this Network Policy configured to handle?
controlplane ~ ➜  kubectl describe netpol payroll-policy 
Name:         payroll-policy
Namespace:    default
Created on:   2025-01-01 09:36:50 +0000 UTC
Labels:       <none>
Annotations:  <none>
Spec:
  PodSelector:     name=payroll
  Allowing ingress traffic:
    To Port: 8080/TCP
    From:
      PodSelector: name=internal
  Not affecting egress traffic
  Policy Types: Ingress

controlplane ~ ➜  kubectl describe netpol payroll-policy | grep traffic
  Allowing ingress traffic:
  Not affecting egress traffic    ---> ingress

controlplane ~ ✖ kubectl describe netpol payroll-policy | grep Types
  Policy Types: Ingress
--------------------------------------------------------------------------

5. What is the impact of the rule configured on this Network Policy? 
 Allowing ingress traffic:
    To Port: 8080/TCP
    From:
      PodSelector: name=internal ---> Traffic from internal to payroll pod is allowed 
--------------------------------------------------------------------------

6. What is the impact of the rule configured on this Network Policy?
---> Internal POD can access port 8080 on Payroll POD
--------------------------------------------------------------------------

7. Access the UI of these applications using the link given above the terminal.
ok
--------------------------------------------------------------------------

8. Perform a connectivity test using the User Interface in these Applications to access the payroll-service at port 8080.
int payroll-service 8080 = ok
ext payroll-service 8080 = fail ---> Only Internal application can access payroll service
--------------------------------------------------------------------------

9. Perform a connectivity test using the User Interface of the Internal Application to access the external-service at port 8080.
external-service 8080 = ok ---> Succesful
--------------------------------------------------------------------------

10. Create a network policy to allow traffic from the Internal application only to the payroll-service and db-service.
Use the spec given below. You might want to enable ingress traffic to the pod to test your rules in the UI.
Also, ensure that you allow egress traffic to DNS ports TCP and UDP (port 53) to enable DNS resolution from the internal pod.

Policy Name: internal-policy
Policy Type: Egress
Egress Allow: payroll
Payroll Port: 8080
Egress Allow: mysql
MySQL Port: 3306

controlplane ~ ✖ kubectl get netpol payroll-policy -oyaml > pol.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"annotations":{},"name":"payroll-policy","namespace":"default"},"spec":{"ingress":[{"from":[{"podSelector":{"matchLabels":{"name":"internal"}}}],"ports":[{"port":8080,"protocol":"TCP"}]}],"podSelector":{"matchLabels":{"name":"payroll"}},"policyTypes":["Ingress"]}}
  creationTimestamp: "2025-01-01T09:36:50Z"
  generation: 1
  name: internal-policy
  namespace: default
  resourceVersion: "4794"
  uid: d8b8ab92-4970-46ac-aa49-a69ce6de3d3b
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          name: internal
    ports:
    - port: 8080
      protocol: TCP
  podSelector:
    matchLabels:
      name: payroll
  policyTypes:
  - Egress
  egress:
  - from:
    - podSelector:
        matchLabels:
          name: internal
    ports:
    - port: 3306
      protocol: TCP
  podSelector:
    matchLabels:
      name: mysql
        #  policyTypes:
        #  - Ingress

-----------
-------------------- New file 
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: internal-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      name: internal
  policyTypes:
  - Egress
  - Ingress
  ingress:
    - {}
  egress:
  - to:
    - podSelector:
        matchLabels:
          name: mysql
    ports:
    - protocol: TCP
      port: 3306

  - to:
    - podSelector:
        matchLabels:
          name: payroll
    ports:
    - protocol: TCP
      port: 8080

  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP

Note: We have also allowed Egress traffic to TCP and UDP port. This has been added to ensure that the internal DNS resolution works from the internal pod.



Remember: The kube-dns service is exposed on port 53:

root@controlplane:~> kubectl get svc -n kube-system 
NAME       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
kube-dns   ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   18m

controlplane ~ ➜  kubectl create  -f netpol.yml 
networkpolicy.networking.k8s.io/internal-policy created

