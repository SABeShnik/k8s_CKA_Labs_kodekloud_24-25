77% **********************************************************************
******* 1_Application Failure ********************************************
**************************************************************************
-----------------------------------------------------------------------------



1. Troubleshooting Test 1: 
A simple 2 tier application is deployed in the "alpha" namespace. 
It must display a green web page on success. Click on the "App" tab at the top of your terminal to view your application. 
It is currently failed. Troubleshoot and fix the issue.
Stick to the given architecture. Use the same names and port numbers as given in the below architecture diagram. 
Feel free to edit, delete or recreate objects as necessary. Fix Issue

controlplane ~ ➜  kubectl get service -n alpha
NAME          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
mysql         ClusterIP   10.43.73.234   <none>        3306/TCP         3m47s
web-service   NodePort    10.43.181.24   <none>        8080:30081/TCP   3m47s

kubectl get service -n alpha web-service -oyaml > web.yml
kubectl get service -n alpha mysql -oyaml > mysql.yml

controlplane ~ ➜  echo "set number" >> ~/.vimrc
controlplane ~ ➜  vi mysql.yml 
"  9   name: mysql" change to "  9   name: mysql-service"

--- MYSQL SERVICE ---
1 apiVersion: v1
  2 kind: Service
  3 metadata:
  4   name: mysql-service
  5   namespace: alpha
  6 spec:
  7   clusterIP: 10.43.73.234
  8   clusterIPs:
  9   - 10.43.73.234
 10   internalTrafficPolicy: Cluster
 11   ipFamilies:
 12   - IPv4
 13   ipFamilyPolicy: SingleStack
 14   ports:
 15   - port: 3306
 16     protocol: TCP
 17     targetPort: 3306
 18   selector:
 19     name: mysql
 20   sessionAffinity: None
 21   type: ClusterIP
 22 status:
 23   loadBalancer: {}


--- WEB SERVICE --- 
1 apiVersion: v1
  2 kind: Service
  3 metadata:
  4   creationTimestamp: "2025-01-13T09:16:48Z"
  5   name: web-service
  6   namespace: alpha
  7   resourceVersion: "763"
  8   uid: 196e9562-4bdf-4539-a868-2ef2210637a8
  9 spec:
 10   clusterIP: 10.43.181.24
 11   clusterIPs:
 12   - 10.43.181.24
 13   externalTrafficPolicy: Cluster
 14   internalTrafficPolicy: Cluster
 15   ipFamilies:
 16   - IPv4
 17   ipFamilyPolicy: SingleStack
 18   ports:
 19   - nodePort: 30081
 20     port: 8080
 21     protocol: TCP
 22     targetPort: 8080
 23   selector:
 24     name: webapp-mysql
 25   sessionAffinity: None
 26   type: NodePort
 27 status:
 28   loadBalancer: {}


controlplane ~ ➜  kubectl get deployments.apps -n alpha webapp-mysql -oyaml > web-msql-deploy.yml
controlplane ~ ➜  cat web-msql-deploy.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-01-13T09:16:48Z"
  generation: 1
  labels:
    name: webapp-mysql
  name: webapp-mysql
  namespace: alpha
  resourceVersion: "778"
  uid: 8b404071-3f88-45db-8c8e-deafabe5d34c
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: webapp-mysql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: webapp-mysql
      name: webapp-mysql
    spec:
      containers:
      - env:
        - name: DB_Host
          value: mysql-service
        - name: DB_User
          value: root
        - name: DB_Password
          value: paswrd
        image: mmumshad/simple-webapp-mysql
        imagePullPolicy: Always
        name: webapp-mysql
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-01-13T09:16:53Z"
    lastUpdateTime: "2025-01-13T09:16:53Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-01-13T09:16:48Z"
    lastUpdateTime: "2025-01-13T09:16:53Z"
    message: ReplicaSet "webapp-mysql-78fd9544f6" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
----------------------------------------------------------------------------------------------------------------------



2. Troubleshooting Test 2 (the same schema): 
The same 2 tier application is deployed in the beta namespace. It must display a green web page on success. 
Click on the App tab at the top of your terminal to view your application. It is currently failed. Troubleshoot and fix the issue.
Stick to the given architecture. Use the same names and port numbers as given in the below architecture diagram. Feel free to edit,
delete or recreate objects as necessary. Fix Issue

controlplane ~ ✖ kubectl get deployments.apps --all-namespaces 
NAMESPACE     NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
beta          webapp-mysql             1/1     1            1           3m14s

controlplane ~ ➜  kubectl get service --all-namespaces 
NAMESPACE     NAME             TYPE           CLUSTER-IP     EXTERNAL-IP       PORT(S)    
beta          mysql-service    ClusterIP      10.43.152.28   <none>            3306/TCP     
beta          web-service      NodePort       10.43.7.33     <none>            8080:30081/TCP

controlplane ~ ➜  kubectl edit service -n beta mysql-service 
"24     targetPort: 8080" change to " 24     targetPort: 3306"
service/mysql-service edited
----------------------------------------------------------------------------------------------------------------------


3. Troubleshooting Test 3: 
The same 2 tier application is deployed in the "gamma" namespace. It must display a green web page on success. 
Click on the "App" tab at the top of your terminal to view your application. It is currently failed or unresponsive. 
Troubleshoot and fix the issue. Stick to the given architecture. 
Use the same names and port numbers as given in the below architecture diagram. 
Feel free to edit, delete or recreate objects as necessary. Fix Issue

controlplane ~ ➜  kubectl get deployments.apps --all-namespaces 
NAMESPACE     NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
gamma         webapp-mysql             1/1     1            1           64s

controlplane ~ ➜  kubectl edit service -n gamma mysql-service
"26     name: sql00001" change to " 26     name: mysql"
----------------------------------------------------------------------------------------------------------------------


4. Troubleshooting Test 4: - New diagram (add user data)
The same 2 tier application is deployed in the "delta" namespace. It must display a green web page on success. 
Click on the "App" tab at the top of your terminal to view your application. It is currently failed. Troubleshoot and fix the issue.
Stick to the given architecture. Use the same names and port numbers as given in the below architecture diagram. 
Feel free to edit, delete or recreate objects as necessary. Fix Issue

controlplane ~ ➜  kubectl get service -n delta 
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
mysql-service   ClusterIP   10.43.50.140    <none>        3306/TCP         111s
web-service     NodePort    10.43.241.122   <none>        8080:30081/TCP   111s

controlplane ~ ➜  echo "set number" >> ~/.vimrc 
controlplane ~ ➜  kubectl edit deployments.apps -n delta webapp-mysql 
Change " 42           value: sql-user" to " 42           value: root"
deployment.apps/webapp-mysql edited
----------------------------------------------------------------------------------------------------------------------


5. Troubleshooting Test 5: 
The same 2 tier application is deployed in the "epsilon" namespace. It must display a green web page on success. 
Click on the "App" tab at the top of your terminal to view your application. It is currently failed. Troubleshoot and fix the issue.
Stick to the given architecture. Use the same names and port numbers as given in the below architecture diagram. 
Feel free to edit, delete or recreate objects as necessary. Fix Issue + Fix Issue

controlplane ~ ✖ kubectl get deployments.apps --all-namespaces 
NAMESPACE     NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
epsilon       webapp-mysql             1/1     1            1           75s

controlplane ~ ➜  echo "set number" >> ~/.vimrc 
controlplane ~ ➜  kubectl edit deployments.apps -n epsilon webapp-mysql 
Change " 42           value: sql-user" to " 42           value: root"
deployment.apps/webapp-mysql edited

controlplane ~ ➜  kubectl get pods -n epsilon 
NAME                            READY   STATUS    RESTARTS   AGE
mysql                           1/1     Running   0          9m
webapp-mysql-78fd9544f6-2bc9c   1/1     Running   0          67s

root@controlplane:~# kubectl -n epsilon describe pod mysql  | grep MYSQL_ROOT_PASSWORD 
      MYSQL_ROOT_PASSWORD:  passwooooorrddd
root@controlplane:~#

 18     - name: MYSQL_ROOT_PASSWORD ---> DB_PASSWORD

controlplane ~ ➜  kubectl edit pod -n epsilon mysql
" 19       value: passwooooorrddd" to " 19       value:paswrd"
kubectl get pods -n epsilon mysql -oyaml > mysqlpod.yml
controlplane ~ ✖ kubectl create -f mysqlpod.yml 
pod/mysql created
--- or ---
controlplane ~ ➜  kubectl delete pods -n epsilon mysql ---> pod "mysql" deleted
controlplane ~ ➜  vi mysqlpod.yml ---> chanage " 19       value: passwooooorrddd" to " 19       value:paswrd"
controlplane ~ ➜  kubectl create -f mysqlpod.yml ---> pod/mysql created

right block:
 13   - env:
 14     - name: DB_Host
 15       value: mysql-service
 16     - name: DB_User
 17       value: root
 18     - name: DB_PASSWORD
 19       value: paswrd

----------------------------------------------------------------------------------------------------------------------


6. Troubleshooting Test 6: The same 2 tier application is deployed in the zeta namespace. It must display a green web page on success. 
Click on the App tab at the top of your terminal to view your application. It is currently failed. Troubleshoot and fix the issue.
Stick to the given architecture. Use the same names and port numbers as given in the below architecture diagram. 
Feel free to edit, delete or recreate objects as necessary. Fix Issue + Fix Issue + Fix Issue

--- HINT ---
Inspect the ports used by the web-service is it correct? Are the environment variable used as per the architecture diagram?

controlplane ~ ➜  kubectl get deployments.apps --all-namespaces  | grep zeta
zeta          webapp-mysql             1/1     1            1           17s

controlplane ~ ➜  kubectl get service -n zeta
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
mysql-service   ClusterIP   10.43.124.206   <none>        3306/TCP         3m34s
web-service     NodePort    10.43.242.238   <none>        8080:30088/TCP   3m34s  <----- Wrong port

controlplane ~ ➜  kubectl get pods --all-namespaces | grep zeta
zeta          mysql                                     1/1     Running     0          4m58s
zeta          webapp-mysql-b9c9f7fbd-rnn29              1/1     Running     0          4m58s

controlplane ~ ➜  kubectl describe pods -n zeta mysql 
Name:             mysql
Namespace:        zeta
Priority:         0
Service Account:  default
Node:             controlplane/192.168.42.149
Start Time:       Mon, 13 Jan 2025 11:12:00 +0000
Labels:           name=mysql
Annotations:      <none>
Status:           Running
IP:               10.42.0.25
IPs:
  IP:  10.42.0.25
Containers:
  mysql:
    Container ID:   containerd://ce67b1740ee0960685e651a3a24c57987b40edfffdba1587e880c0d8d300b971
    Image:          mysql:5.6
    Image ID:       docker.io/library/mysql@sha256:20575ecebe6216036d25dab5903808211f1e9ba63dc7825ac20cb975e34cfcae
    Port:           3306/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Mon, 13 Jan 2025 11:12:00 +0000
    Ready:          True
    Restart Count:  0
    Environment:
      MYSQL_ROOT_PASSWORD:  passwooooorrddd
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-f4hpx (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 
Volumes:
  kube-api-access-f4hpx:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  5m56s  default-scheduler  Successfully assigned zeta/mysql to controlplane
  Normal  Pulled     5m56s  kubelet            Container image "mysql:5.6" already present on machine
  Normal  Created    5m56s  kubelet            Created container mysql
  Normal  Started    5m56s  kubelet            Started container mysql





controlplane ~ ➜  kubectl describe pods -n zeta webapp-mysql-b9c9f7fbd-rnn29 
Name:             webapp-mysql-b9c9f7fbd-rnn29
Namespace:        zeta
Priority:         0
Service Account:  default
Node:             controlplane/192.168.42.149
Start Time:       Mon, 13 Jan 2025 11:12:00 +0000
Labels:           name=webapp-mysql
                  pod-template-hash=b9c9f7fbd
Annotations:      <none>
Status:           Running
IP:               10.42.0.26
IPs:
  IP:           10.42.0.26
Controlled By:  ReplicaSet/webapp-mysql-b9c9f7fbd
Containers:
  webapp-mysql:
    Container ID:   containerd://1736b4f68fb836ba36b2815cf9270be28a15d4170f13389aaab501e3206e039a
    Image:          mmumshad/simple-webapp-mysql
    Image ID:       docker.io/mmumshad/simple-webapp-mysql@sha256:d4d0c03fcb76cee6ae2511fa7f3f6b7090f0c5e0cb3f276687f9ddf2c689cc09
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Mon, 13 Jan 2025 11:12:01 +0000
    Ready:          True
    Restart Count:  0
    Environment:
      DB_Host:      mysql-service
      DB_User:      sql-user
      DB_Password:  paswrd
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mmc5w (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 
Volumes:
  kube-api-access-mmc5w:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age    From               Message
  ----    ------     ----   ----               -------
  Normal  Scheduled  6m17s  default-scheduler  Successfully assigned zeta/webapp-mysql-b9c9f7fbd-rnn29 to controlplane
  Normal  Pulling    6m17s  kubelet            Pulling image "mmumshad/simple-webapp-mysql"
  Normal  Pulled     6m17s  kubelet            Successfully pulled image "mmumshad/simple-webapp-mysql" in 148ms (148ms including waiting). Image size: 36428415 bytes.
  Normal  Created    6m17s  kubelet            Created container webapp-mysql
  Normal  Started    6m16s  kubelet            Started container webapp-mysql

--- SOLUTION ---
1. webapp-mysql deployment
kubectl edit deployments.apps -n zeta webapp-mysql ---> see var DB_User and:
Change " 42           value: sql-user" ---to--- " 42           value: root"

2. mysql pod
2.1. kubectl get pods -n zeta 
NAME                            READY   STATUS    RESTARTS   AGE
mysql                           1/1     Running   0          8m37s
2.2.kubectl get pods -n zeta mysql -oyaml >> pod.yml
2.3. kubectl delete pods -n zeta mysql ---> pod "mysql" deleted
2.4. vi pod.yml ---> Change " 15       value: passwooooorrddd" ---to--- " 15       value: paswrd"
2.5. controlplane ~ ➜  kubectl create -f pod.yml ---> pod/mysql created

3. web-service 
3.1. kubectl get service -n zeta
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
mysql-service   ClusterIP   10.43.137.48   <none>        3306/TCP         15m
web-service     NodePort    10.43.99.77    <none>        8080:30088/TCP   15m  <----- Wrong port
3.2. kubectl edit service -n zeta web-service
Change " 23   - nodePort: 30088" ---on--- " 23   - nodePort: 30081"
-----------------------------------------------------------------------------

webapp-mysql deployment file:
controlplane ~ ➜  cat dep.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-01-13T13:05:27Z"
  generation: 1
  labels:
    name: webapp-mysql
  name: webapp-mysql
  namespace: zeta
  resourceVersion: "1205"
  uid: 751bdd04-1cd2-47f0-960d-b19d0efac2a7
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: webapp-mysql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: webapp-mysql
      name: webapp-mysql
    spec:
      containers:
      - env:
        - name: DB_Host
          value: mysql-service
        - name: DB_User
          value: sql-user
        - name: DB_Password
          value: paswrd
        image: mmumshad/simple-webapp-mysql
        imagePullPolicy: Always
        name: webapp-mysql
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-01-13T13:05:29Z"
    lastUpdateTime: "2025-01-13T13:05:29Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-01-13T13:05:27Z"
    lastUpdateTime: "2025-01-13T13:05:29Z"
    message: ReplicaSet "webapp-mysql-b9c9f7fbd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1



2. mysql pod file
controlplane ~ ➜  cat pod.yml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-01-13T13:05:27Z"
  labels:
    name: mysql
  name: mysql
  namespace: zeta
  resourceVersion: "1204"
  uid: 0eacab43-85f3-4072-8b97-d48da053c542
spec:
  containers:
  - env:
    - name: MYSQL_ROOT_PASSWORD
      value: paswrd
    image: mysql:5.6
    imagePullPolicy: IfNotPresent
    name: mysql
    ports:
    - containerPort: 3306
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-7g9mc
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: controlplane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-7g9mc
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-13T13:05:29Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-13T13:05:27Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-13T13:05:29Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-13T13:05:29Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-13T13:05:27Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://7a928ccb8d21cf3259e2127b2a70fc346a20f810b78aaf386ec4d41c2feffe62
    image: docker.io/library/mysql:5.6
    imageID: docker.io/library/mysql@sha256:20575ecebe6216036d25dab5903808211f1e9ba63dc7825ac20cb975e34cfcae
    lastState: {}
    name: mysql
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-13T13:05:28Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-7g9mc
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.251.213
  hostIPs:
  - ip: 192.168.251.213
  phase: Running
  podIP: 10.42.0.19
  podIPs:
  - ip: 10.42.0.19
  qosClass: BestEffort
  startTime: "2025-01-13T13:05:27Z"




3. web-service (controlplane ~ ➜  kubectl get service -n zeta web-service -oyaml > svc.yml)
controlplane ~ ➜  cat svc.yml 
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-01-13T13:05:27Z"
  name: web-service
  namespace: zeta
  resourceVersion: "1633"
  uid: 787e3a86-9eda-4448-bee8-7eb23813ae60
spec:
  clusterIP: 10.43.99.77
  clusterIPs:
  - 10.43.99.77
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30081
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: webapp-mysql
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
