**************************************************************************
******* 7_ CKA_-_Ingress_Networking_-_1 **********************************
**************************************************************************
-----------------------------------------------------------------------------



1. We have deployed Ingress Controller, resources and applications. Explore the setup.
Note: They are in different namespaces.
controlplane ~ ➜  kubectl get all --all-namespaces 
NAMESPACE       NAME                                            READY   STATUS      RESTARTS   AGE
app-space       pod/default-backend-5cd488d85c-p5rxr            1/1     Running     0          76s
app-space       pod/webapp-video-cb475db9c-fqps9                1/1     Running     0          76s
app-space       pod/webapp-wear-6886df6554-4hrrm                1/1     Running     0          76s
ingress-nginx   pod/ingress-nginx-admission-create-wxh8d        0/1     Completed   0          74s
ingress-nginx   pod/ingress-nginx-admission-patch-89kwn         0/1     Completed   1          74s
ingress-nginx   pod/ingress-nginx-controller-7f45764b55-qxk7s   1/1     Running     0          74s
kube-flannel    pod/kube-flannel-ds-d5ng9                       1/1     Running     0          4m8s
kube-system     pod/coredns-77d6fd4654-cnjjk                    1/1     Running     0          4m8s
kube-system     pod/coredns-77d6fd4654-qkrw7                    1/1     Running     0          4m8s
kube-system     pod/etcd-controlplane                           1/1     Running     0          4m13s
kube-system     pod/kube-apiserver-controlplane                 1/1     Running     0          4m13s
kube-system     pod/kube-controller-manager-controlplane        1/1     Running     0          4m13s
kube-system     pod/kube-proxy-m6rmz                            1/1     Running     0          4m8s
kube-system     pod/kube-scheduler-controlplane                 1/1     Running     0          4m13s

NAMESPACE       NAME                                         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
app-space       service/default-backend-service              ClusterIP   172.20.224.50    <none>        80/TCP                       76s
app-space       service/video-service                        ClusterIP   172.20.233.215   <none>        8080/TCP                     76s
app-space       service/wear-service                         ClusterIP   172.20.252.202   <none>        8080/TCP                     76s
default         service/kubernetes                           ClusterIP   172.20.0.1       <none>        443/TCP                      4m15s
ingress-nginx   service/ingress-nginx-controller             NodePort    172.20.20.107    <none>        80:30080/TCP,443:32103/TCP   75s
ingress-nginx   service/ingress-nginx-controller-admission   ClusterIP   172.20.65.86     <none>        443/TCP                      75s
kube-system     service/kube-dns                             ClusterIP   172.20.0.10      <none>        53/UDP,53/TCP,9153/TCP       4m14s

NAMESPACE      NAME                             DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-flannel   daemonset.apps/kube-flannel-ds   1         1         1       1            1           <none>                   4m13s
kube-system    daemonset.apps/kube-proxy        1         1         1       1            1           kubernetes.io/os=linux   4m14s

NAMESPACE       NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE
app-space       deployment.apps/default-backend            1/1     1            1           76s
app-space       deployment.apps/webapp-video               1/1     1            1           76s
app-space       deployment.apps/webapp-wear                1/1     1            1           76s
ingress-nginx   deployment.apps/ingress-nginx-controller   1/1     1            1           75s
kube-system     deployment.apps/coredns                    2/2     2            2           4m14s

NAMESPACE       NAME                                                  DESIRED   CURRENT   READY   AGE
app-space       replicaset.apps/default-backend-5cd488d85c            1         1         1       76s
app-space       replicaset.apps/webapp-video-cb475db9c                1         1         1       76s
app-space       replicaset.apps/webapp-wear-6886df6554                1         1         1       76s
ingress-nginx   replicaset.apps/ingress-nginx-controller-7f45764b55   1         1         1       75s
kube-system     replicaset.apps/coredns-77d6fd4654                    2         2         2       4m8s

NAMESPACE       NAME                                       STATUS     COMPLETIONS   DURATION   AGE
ingress-nginx   job.batch/ingress-nginx-admission-create   Complete   1/1           7s         74s
ingress-nginx   job.batch/ingress-nginx-admission-patch    Complete   1/1           7s         74s
-----------------------------------------------------------------------------------------------

2. Which namespace is the Ingress Controller deployed in?
controlplane ~ ➜  kubectl get all --all-namespaces 
NAMESPACE       NAME                                            READY   STATUS      RESTARTS   AGE
app-space       pod/webapp-wear-6886df6554-4hrrm                1/1     Running     0          76s
ingress-nginx   pod/ingress-nginx-admission-create-wxh8d        0/1     Completed   0          74s
---> ingress-nginx
-----------------------------------------------------------------------------------------------

3. What is the name of the Ingress Controller Deployment?
NAMESPACE       NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE
app-space       deployment.apps/webapp-wear                1/1     1            1           76s
ingress-nginx   deployment.apps/ingress-nginx-controller   1/1     1            1           75s
---> ingress-nginx-controller
-----------------------------------------------------------------------------------------------

4. Which namespace are the applications deployed in?
controlplane ~ ➜  kubectl get po -A
NAMESPACE       NAME                                        READY   STATUS      RESTARTS   AGE
app-space       default-backend-5cd488d85c-p5rxr            1/1     Running     0          8m11s
app-space       webapp-video-cb475db9c-fqps9                1/1     Running     0          8m11s
app-space       webapp-wear-6886df6554-4hrrm                1/1     Running     0          8m11s
ingress-nginx   ingress-nginx-admission-create-wxh8d        0/1     Completed   0          8m9s
ingress-nginx   ingress-nginx-admission-patch-89kwn         0/1     Completed   1          8m9s
ingress-nginx   ingress-nginx-controller-7f45764b55-qxk7s   1/1     Running     0          8m9s
kube-flannel    kube-flannel-ds-d5ng9                       1/1     Running     0          11m
kube-system     coredns-77d6fd4654-cnjjk                    1/1     Running     0          11m
kube-system     coredns-77d6fd4654-qkrw7                    1/1     Running     0          11m
kube-system     etcd-controlplane                           1/1     Running     0          11m
kube-system     kube-apiserver-controlplane                 1/1     Running     0          11m
kube-system     kube-controller-manager-controlplane        1/1     Running     0          11m
kube-system     kube-proxy-m6rmz                            1/1     Running     0          11m
kube-system     kube-scheduler-controlplane                 1/1     Running     0          11m
---> app-space
-----------------------------------------------------------------------------------------------

5. How many applications are deployed in the app-space namespace?
Count the number of deployments in this namespace.

controlplane ~ ➜  kubectl get deploy --namespace app-space
NAME              READY   UP-TO-DATE   AVAILABLE   AGE
default-backend   1/1     1            1           9m28s
webapp-video      1/1     1            1           9m28s
webapp-wear       1/1     1            1           9m28s

controlplane ~ ➜  kubectl get deploy --namespace app-space | wc -l
4 (-1) ===> 3
-----------------------------------------------------------------------------------------------

6. Which namespace is the Ingress Resource deployed in?

controlplane ~ ✖ kubectl get all --all-namespaces | grep ingress
ingress-nginx   pod/ingress-nginx-admission-create-wxh8d        0/1     Completed   0          12m
ingress-nginx   pod/ingress-nginx-admission-patch-89kwn         0/1     Completed   1          12m
ingress-nginx   pod/ingress-nginx-controller-7f45764b55-qxk7s   1/1     Running     0          12m
ingress-nginx   service/ingress-nginx-controller             NodePort    172.20.20.107    <none>        80:30080/TCP,443:32103/TCP   12m
ingress-nginx   service/ingress-nginx-controller-admission   ClusterIP   172.20.65.86     <none>        443/TCP                      12m
ingress-nginx   deployment.apps/ingress-nginx-controller   1/1     1            1           12m
ingress-nginx   replicaset.apps/ingress-nginx-controller-7f45764b55   1         1         1       12m
ingress-nginx   job.batch/ingress-nginx-admission-create   Complete   1/1           7s         12m
ingress-nginx   job.batch/ingress-nginx-admission-patch    Complete   1/1           7s         12m

controlplane ~ ➜  kubectl get ingress --all-namespaces
NAMESPACE   NAME                 CLASS    HOSTS   ADDRESS         PORTS   AGE
app-space   ingress-wear-watch   <none>   *       172.20.20.107   80      13m <--- Answer
-----------------------------------------------------------------------------------------------

7. What is the name of the Ingress Resource? ---> ingress-wear-watch

controlplane ~ ➜  kubectl get ingress --all-namespaces
NAMESPACE   NAME                 CLASS    HOSTS   ADDRESS         PORTS   AGE
app-space   ingress-wear-watch   <none>   *       172.20.20.107   80      13m
-----------------------------------------------------------------------------------------------

8. What is the Host configured on the Ingress Resource? ---> Answer ---> *
The host entry defines the domain name that users use to reach the application like www.google.com

controlplane ~ ➜  kubectl describe ingress -n app-space ingress-wear-watch 
Name:             ingress-wear-watch
Labels:           <none>
Namespace:        app-space
Address:          172.20.20.107
Ingress Class:    <none>
Default backend:  <default>
Rules:
  Host        Path  Backends
  ----        ----  --------
  *  <-------------------------------- Answer
              /wear    wear-service:8080 (172.17.0.4:8080)
              /watch   video-service:8080 (172.17.0.5:8080)
Annotations:  nginx.ingress.kubernetes.io/rewrite-target: /
              nginx.ingress.kubernetes.io/ssl-redirect: false
Events:
  Type    Reason  Age                From                      Message
  ----    ------  ----               ----                      -------
  Normal  Sync    16m (x2 over 16m)  nginx-ingress-controller  Scheduled for sync
-----------------------------------------------------------------------------------------------

9. What backend is the /wear path on the Ingress configured with? ---> Answer ---> wear-service
controlplane ~ ✖ kubectl describe ingress -n app-space ingress-wear-watch | grep /wear
              /wear    wear-service:8080 (172.17.0.4:8080)
-----------------------------------------------------------------------------------------------

10. At what path is the video streaming application made available on the Ingress? ---> /watch 
controlplane ~ ➜  kubectl describe ingress -n app-space ingress-wear-watch | grep /watch
              /watch   video-service:8080 (172.17.0.5:8080)
-----------------------------------------------------------------------------------------------

11. If the requirement does not match any of the configured paths in the Ingress, 
to which service are the requests forwarded?  ----------> default-backend-service

controlplane ~ ➜ kubectl describe ingress -n app-space ingress-wear-watch | grep "Default backend:"
Default backend:  <default>

Execute the command kubectl describe ingress --namespace app-space and examine the Default backend field. 
If it displays <default>, proceed to inspect the ingress controller's manifest by executing 
kubectl get deploy ingress-nginx-controller -n ingress-nginx -o yaml. 
In the manifest, search for the argument --default-backend-service

controlplane ~ ➜  kubectl get deploy ingress-nginx-controller -n ingress-nginx -o yaml > i.yml
controlplane ~ ✖ cat i.yml | grep "default-backend-service"
        - --default-backend-service=app-space/default-backend-service
-----------------------------------------------------------------------------------------------

12. Now view the Ingress Service using the tab at the top of the terminal. Which page do you see?
Click on the tab named Ingress. ---> 404 Error Page
-----------------------------------------------------------------------------------------------

13. View the applications by appending /wear and /watch to the URL you opened in the previous step.
https://30080-port-uhx3jhwbzpynom4o.labs.kodekloud.com/wear
https://30080-port-uhx3jhwbzpynom4o.labs.kodekloud.com/watch
-----------------------------------------------------------------------------------------------

14. You are requested to change the URLs at which the applications are made available.
Make the video application available at /stream.
Ingress: ingress-wear-watch
Path: /stream
Backend Service: video-service
Backend Service Port: 8080


controlplane ~ ➜  kubectl edit ingress -n app-space ingress-wear-watch
ingress.networking.k8s.io/ingress-wear-watch edited

--- ORIGINAL ingress ---------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  creationTimestamp: "2025-01-11T17:53:43Z"
  generation: 1
  name: ingress-wear-watch
  namespace: app-space
  resourceVersion: "851"
  uid: 61736786-3a58-43a2-8335-73266d5eab9d
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: wear-service
            port:
              number: 8080
        path: /wear
        pathType: Prefix
      - backend:
          service:
            name: video-service
            port:
              number: 8080
        path: /watch   <--------------------- change to "/stream"
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - ip: 172.20.20.107
-----------------------------------------------------------------------------------------------

15. View the Video application using the /stream URL in your browser.
Click on the Ingress tab above your terminal, if its not open already, 
and append /stream to the URL in the browser.
-----------------------------------------------------------------------------------------------

16. A user is trying to view the "/eat" URL on the Ingress Service. Which page would he see?
If not open already, click on the Ingress tab above your terminal, and append /eat to the URL in the browser.
Answer ---> 404 Error Page
-----------------------------------------------------------------------------------------------

17. Due to increased demand, your business decides to take on a new venture. 
You acquired a food delivery company. Their applications have been migrated over to your cluster.
Inspect the new deployments in the app-space namespace.

controlplane ~ ➜  kubectl get deployments -n app-space 
NAME              READY   UP-TO-DATE   AVAILABLE   AGE
default-backend   1/1     1            1           39m
webapp-food       1/1     1            1           64s <---------------
webapp-video      1/1     1            1           39m
webapp-wear       1/1     1            1           39m
-----------------------------------------------------------------------------------------------

18. You are requested to add a new path to your ingress to make 
the food delivery application available to your customers.
Make the new application available at /eat.

controlplane ~ ➜  kubectl edit ingress -n app-space ingress-wear-watch
add this block:
      - backend:
          service:
            name: food-service
            port:
              number: 8080
        path: /eat
        pathType: Prefix
      
-----------------------------------------------------------------------------------------------

19. View the Food delivery application using the /eat URL in your browser.
Click on the Ingress tab above your terminal, if its not open already, and append /eat to the URL in the browser.
https://30080-port-uhx3jhwbzpynom4o.labs.kodekloud.com/eat
-----------------------------------------------------------------------------------------------

20. A new payment service has been introduced. Since it is critical, 
the new application is deployed in its own namespace.
Identify the namespace in which the new application is deployed.

controlplane ~ ✖ kubectl get ns
NAME              STATUS   AGE
app-space         Active   45m
critical-space    Active   35s <------- Answer
default           Active   48m
ingress-nginx     Active   45m
kube-flannel      Active   48m
kube-node-lease   Active   48m
kube-public       Active   48m
kube-system       Active   48m
-----------------------------------------------------------------------------------------------

21. What is the name of the deployment of the new application? ---> webapp-pay
controlplane ~ ➜  kubectl get deployments.apps -n critical-space 
NAME         READY   UP-TO-DATE   AVAILABLE   AGE
webapp-pay   1/1     1            1           102s
-----------------------------------------------------------------------------------------------

22. You are requested to make the new application available at /pay.
Identify and implement the best approach to making this application available on the ingress controller 
and test to make sure its working. Look into annotations: rewrite-target as well 
(https://kubernetes.github.io/ingress-nginx/examples/rewrite/).

Ingress Created
Path: /pay
Configure correct backend service
Configure correct backend port

controlplane ~ ➜  kubectl get svc -n critical-space
NAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
pay-service   ClusterIP   172.20.77.229   <none>        8282/TCP   4m18s

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: critical-space
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /pay
        pathType: Prefix
        backend:
          service:
           name: pay-service
           port:
            number: 8282

controlplane ~ ➜  kubectl create -f myi.yml 
ingress.networking.k8s.io/test-ingress created
-----------------------------------------------------------------------------------------------

23. View the Payment application using the /pay URL in your browser.
Click on the Ingress tab above your terminal, if its not open already, and append /pay to the URL in the browser.
https://30080-port-uhx3jhwbzpynom4o.labs.kodekloud.com/pay
-----------------------------------------------------------------------------------------------
